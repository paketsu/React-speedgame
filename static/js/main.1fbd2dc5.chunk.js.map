{"version":3,"sources":["Circles/Circles.js","GameOver/GameOver.js","App.js","index.js"],"names":["Circles","props","className","active","onClick","click","style","backgroundColor","buttonColor","closeHandler","window","location","reload","GameOver","id","score","getRandomInteger","min","max","Math","floor","random","App","state","current","rounds","showGameOver","pace","timer","undefined","next","nextActive","setState","console","log","setTimeout","bind","clickHandler","circleId","endHandler","startHandler","clearTimeout","this","Component","ReactDOM","render","document","getElementById"],"mappings":"2TAiBeA,G,YAZC,SAACC,GACb,OACI,yBACAC,UAAW,UAAYD,EAAME,OAAS,UAAY,IAClDC,QAASH,EAAMI,MACfC,MAAO,CAAEC,gBAAiBN,EAAME,OAASF,EAAME,OAASF,EAAMO,iBCPhEC,G,MAAe,WACjBC,OAAOC,SAASC,WAcLC,EAXE,SAACZ,GACd,OACI,yBAAKa,GAAG,UACJ,yBAAKZ,UAAU,eACX,uBAAGY,GAAG,YAAN,oCAAmDb,EAAMc,OACzD,4BAAQX,QAASK,GAAjB,YCNVO,EAAmB,SAACC,EAAKC,GAC7B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,GA4FxCK,E,2MAtFbC,MAAQ,CACNR,MAAO,EACPS,QAAS,EACTC,OAAQ,EACRC,cAAc,G,EAGhBC,KAAO,K,EACPC,WAAQC,E,EAEVC,KAAO,WACL,IAAIC,OAAaF,EACjB,GACEE,EAAaf,EAAiB,EAAG,SAC1Be,IAAe,EAAKR,MAAMC,SAEnC,EAAKQ,SAAS,CACZR,QAASO,EACTN,OAAQ,EAAKF,MAAME,OAAS,IAG9BQ,QAAQC,IAAI,EAAKX,MAAME,QAEvB,EAAKE,MAAQ,IACb,EAAKC,MAAQO,WAAW,EAAKL,KAAKM,KAAV,gBAAsB,EAAKT,MAEnDM,QAAQC,IAAI,EAAKX,MAAMC,U,EAGzBa,aAAe,SAACC,GACdL,QAAQC,IAAI,OAAQI,GAEhB,EAAKf,MAAMC,UAAYc,EAI3B,EAAKN,SAAS,CACVjB,MAAO,EAAKQ,MAAMR,MAAQ,EAC1BU,OAAQ,IALV,EAAKc,c,EAUTC,aAAe,WACb,EAAKV,Q,EAGPS,WAAa,WACXE,aAAa,EAAKb,OAClB,EAAKI,SAAS,CACZN,cAAc,K,wEAIL,IAAD,OACR,OACE,yBAAKxB,UAAU,OACb,yCACA,qCAAWwC,KAAKnB,MAAMR,OACtB,kBAAC,EAAD,CACEP,YAAY,OACZL,OAA+B,IAAvBuC,KAAKnB,MAAMC,QACnBnB,MAAO,kBAAM,EAAKgC,aAAa,MACjC,kBAAC,EAAD,CACE7B,YAAY,UACZL,OAA+B,IAAvBuC,KAAKnB,MAAMC,QACnBnB,MAAO,kBAAM,EAAKgC,aAAa,MACjC,kBAAC,EAAD,CACE7B,YAAY,SACZL,OAA+B,IAAvBuC,KAAKnB,MAAMC,QACnBnB,MAAO,kBAAM,EAAKgC,aAAa,MACjC,kBAAC,EAAD,CACE7B,YAAY,YACZL,OAA+B,IAAvBuC,KAAKnB,MAAMC,QACnBnB,MAAO,kBAAM,EAAKgC,aAAa,MACjC,6BACE,4BAAQjC,QAASsC,KAAKF,cAAtB,cACA,4BAAQpC,QAASsC,KAAKH,YAAtB,aAGAG,KAAKnB,MAAMG,cAAgB,kBAAC,EAAD,CAAUX,MAAO2B,KAAKnB,MAAMR,a,GAjF/C4B,aCPlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1fbd2dc5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Circles.css';\r\n\r\n// Margit teki tänne pelkän function-based componentin, koska statet on App.js:stä. Appin on hankala\r\n// mennä etsimään stateja eri tiedostosta.\r\nconst Circles = (props) => {\r\n    return (\r\n        <div \r\n        className={'circle' + (props.active ? ' active' : '')}\r\n        onClick={props.click}\r\n        style={{ backgroundColor: props.active ? props.active : props.buttonColor }}\r\n        >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Circles;","import React from 'react';\r\nimport './GameOver.css';\r\n\r\nconst closeHandler = () => {\r\n    window.location.reload();\r\n}\r\n\r\nconst GameOver = (props) => {\r\n    return (\r\n        <div id=\"result\">\r\n            <div className=\"gameoverbox\">\r\n                <p id=\"gameover\">Game over! Your final score was: {props.score}</p>\r\n                <button onClick={closeHandler}>Close</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameOver;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Circles from './Circles/Circles';\nimport GameOver from './GameOver/GameOver';\n\n// Huom! Tämä funktio on kirjoitettu classin ulkopuolelle\nconst getRandomInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n// Rivit 23-26: Huom! Komponentin sisälle ei voi kirjoittaa esim. onClickiä! Se ei toimi. Sen sijaan html:n, esimerkiksi buttonin, sisälle voi kirjoittaa näin\n// Rivit 23-26: React käy yleensä automaattisesti kaikki funktiot läpi heti käynnistyessään. Jottä näin ei kävisi, pitää clickHandlerin eteen lisätä arrow function!\nclass App extends Component {\n  state = {\n    score: 0,\n    current: 0,\n    rounds: 0,\n    showGameOver: false,\n  }\n  \n  pace = 1500;\n  timer = undefined;\n\nnext = () => {\n  let nextActive = undefined;\n  do {\n    nextActive = getRandomInteger(1, 4);\n  } while (nextActive === this.state.current);\n  \n  this.setState({\n    current: nextActive,\n    rounds: this.state.rounds + 1\n  })\n\n  console.log(this.state.rounds);\n\n  this.pace *= 0.95;\n  this.timer = setTimeout(this.next.bind(this), this.pace);\n\n  console.log(this.state.current);\n}\n\nclickHandler = (circleId) => {\n  console.log(\"Wow!\", circleId);\n\n  if (this.state.current !== circleId) {\n    this.endHandler();\n    return;\n  }\n  this.setState({\n      score: this.state.score + 1,\n      rounds: 0\n  })\n\n}\n// Nextin voi myös kirjoittaa suoraan tähän funktioon. Tämä kirjoitustyyli on toisaalta havainnollinen koodin luettavuuden kannalta\nstartHandler = () => {\n  this.next();\n}\n\nendHandler = () => {\n  clearTimeout(this.timer);\n  this.setState({\n    showGameOver: true\n  })\n}\n// Esim. rivi 62: attribuuttien edessä ei ole välilyöntiä!\n  render () {\n    return (\n      <div className=\"App\">\n        <h1>Speedgame</h1>\n        <p>Score: {this.state.score}</p>\n        <Circles \n          buttonColor='blue'\n          active={this.state.current === 1}\n          click={() => this.clickHandler(1)}/>\n        <Circles \n          buttonColor='magenta'\n          active={this.state.current === 2}\n          click={() => this.clickHandler(2)}/>\n        <Circles \n          buttonColor='yellow'\n          active={this.state.current === 3}\n          click={() => this.clickHandler(3)}/>\n        <Circles \n          buttonColor='orangered'\n          active={this.state.current === 4}\n          click={() => this.clickHandler(4)}/>\n        <div>\n          <button onClick={this.startHandler}>Start Game</button>\n          <button onClick={this.endHandler}>End Game</button>\n        </div>\n\n        { this.state.showGameOver && <GameOver score={this.state.score} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}